{"version":3,"sources":["context/StateProvider.js","firebase.js","components/AddItem.js","components/Categories.js","components/Item.js","components/Items.js","context/reducer.js","components/Login.js","components/Logout.js","components/UserInfo.js","App.js","serviceWorker.js","index.js"],"names":["StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","db","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","useStyles","createUseStyles","myForm","width","display","gridTemplateColumns","justifyContent","paddingTop","myFormControls","button","marginRight","flexDirection","AddItem","id","classes","user","React","useState","title","link","form","setForm","handleChange","event","target","name","submitForm","e","a","preventDefault","collection","doc","add","timestamp","FieldValue","serverTimestamp","userId","uid","className","onSubmit","col","rows","type","placeholder","onChange","required","Categories","values","change","useEffect","length","defaultValue","map","key","Item","categoryId","item","deleteItem","itemId","delete","href","rel","Date","toDate","toUTCString","onClick","window","confirm","fill","xmlns","viewBox","height","d","container","marginTop","marginBottom","padding","Items","isLoading","data","actionTypes","state","action","login","placeContent","alignItems","textAlign","paddingBottom","color","backgroundColor","fontWeight","border","borderRadius","Login","dispatch","loading","setLoading","sub","onAuthStateChanged","signInWithPopup","then","result","catch","error","alert","message","Logout","logout","UserInfo","src","photoURL","alt","App","headerStyle","setHeaderStyle","setIsLoading","categories","setCategories","items","setItems","catId","setCatId","useScrollPosition","prevPos","currPos","y","boxShadow","onSnapshot","docs","i","Fragment","style","where","orderBy","snapshot","signOut","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.55cf203f.chunk.js","sourcesContent":["import React, { createContext, useContext, useReducer } from 'react';\n\nexport const StateContext = createContext();\n\nexport const StateProvider = ({ reducer, initialState, children }) => (\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\n    {children}\n  </StateContext.Provider>\n);\n\nexport const useStateValue = () => useContext(StateContext);\n","import * as firebase from 'firebase';\n\nconst config = {\n  apiKey: 'AIzaSyCPbuYMie4GZcZdpTNBLGiAIOs2TEcdW2E',\n  authDomain: 'resources-list-cdcc1.firebaseapp.com',\n  databaseURL: 'https://resources-list-cdcc1.firebaseio.com',\n  projectId: 'resources-list-cdcc1',\n  storageBucket: 'resources-list-cdcc1.appspot.com',\n  messagingSenderId: '110668222898',\n  appId: '1:110668222898:web:44a887a3e34b43195554ab',\n  measurementId: 'G-X3GCL5JFCL',\n};\n\nconst firebaseApp = firebase.initializeApp(config);\n\nconst db = firebaseApp.firestore();\n\nconst auth = firebase.auth();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\n\nexport { auth, provider };\nexport default db;\n","import React from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { firestore } from 'firebase';\nimport { useStateValue } from '../context/StateProvider';\nimport db from '../firebase';\n\nconst useStyles = createUseStyles({\n  myForm: {\n    width: '100%',\n    display: 'grid',\n    gridTemplateColumns: '0.6fr',\n    justifyContent: 'center',\n    paddingTop: '1rem',\n  },\n  myFormControls: {\n    display: 'grid',\n    gridTemplateColumns: '1fr',\n  },\n  button: {\n    marginRight: 0,\n  },\n  '@media screen and (max-width: 32em)': {\n    myForm: {\n      width: '85vw',\n      gridTemplateColumns: '1fr',\n    },\n    myFormControls: {\n      flexDirection: 'column',\n    },\n  },\n});\n\nfunction AddItem({ id }) {\n  const classes = useStyles();\n  const [{ user }] = useStateValue();\n  const [form, setForm] = React.useState({ title: '', link: '' });\n  const handleChange = (event) => {\n    setForm({ ...form, [event.target.name]: event.target.value });\n  };\n  const submitForm = async (e) => {\n    e.preventDefault();\n    if (!form.title || !form.link) {\n      return;\n    }\n    if (id) {\n      await db.collection('categories').doc(id).collection('items').add({\n        title: form.title,\n        link: form.link,\n        timestamp: firestore.FieldValue.serverTimestamp(),\n        userId: user.uid,\n      });\n      setForm({ title: '', link: '' });\n    }\n  };\n  return (\n    <form className={classes.myForm} onSubmit={submitForm}>\n      <div className={classes.myFormControls}>\n        <textarea\n          col=\"4\"\n          rows=\"4\"\n          type=\"text\"\n          name=\"title\"\n          placeholder=\"Name and/or description\"\n          onChange={handleChange}\n          value={form.title}\n          required\n        />\n        <input\n          type=\"url\"\n          name=\"link\"\n          className={classes.button}\n          placeholder=\"Link\"\n          onChange={handleChange}\n          value={form.link}\n          required\n        />\n        <input className=\"input button\" type=\"submit\" value=\"ADD\" />\n      </div>\n    </form>\n  );\n}\n\nexport default AddItem;\n","import React, { useEffect } from 'react';\n\nfunction Categories({ values, change }) {\n  useEffect(() => {\n    if (values.length > 0) {\n      const target = { target: { value: values[0].id } };\n      change(target);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [values]);\n  return (\n    <>\n      {values.length > 0 ? (\n        <select\n          name=\"categories\"\n          className=\"input select\"\n          onChange={change}\n          defaultValue={values[0].id}\n        >\n          <option value=\"\">Category</option>\n          {values.map((e) => (\n            <option value={e.id} key={e.id}>\n              {e.name}\n            </option>\n          ))}\n        </select>\n      ) : (\n        <>\n          <select className=\"input select\">\n            <option value=\"\">Category</option>\n            <option value=\"\">Loading...</option>\n          </select>\n        </>\n      )}\n    </>\n  );\n}\n\nexport default Categories;\n","import React from 'react';\nimport db from '../firebase';\n\nfunction Item({ categoryId, item }) {\n  const deleteItem = async (itemId) => {\n    if (itemId) {\n      await db\n        .collection('categories')\n        .doc(categoryId)\n        .collection('items')\n        .doc(itemId)\n        .delete();\n    }\n  };\n\n  return (\n    <div className=\"card\">\n      <h1>\n        <a href={item.link} target=\"_blank\" rel=\"noopener noreferrer\">\n          {item.link}\n        </a>\n      </h1>\n      <blockquote>{item.title}</blockquote>\n      <div className=\"item__footer\">\n        {item.timestamp && (\n          <small>{new Date(item.timestamp.toDate()).toUTCString()}</small>\n        )}\n        <button\n          onClick={() => {\n            if (window.confirm('Are you sure you wish to delete this item?'))\n              deleteItem(item.id);\n          }}\n        >\n          Remove\n        </button>\n      </div>\n      <button className=\"item__edit\">\n        <svg\n          fill=\"#000000\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 50 50\"\n          width=\"50px\"\n          height=\"50px\"\n        >\n          <path d=\"M 43.125 2 C 41.878906 2 40.636719 2.488281 39.6875 3.4375 L 38.875 4.25 L 45.75 11.125 C 45.746094 11.128906 46.5625 10.3125 46.5625 10.3125 C 48.464844 8.410156 48.460938 5.335938 46.5625 3.4375 C 45.609375 2.488281 44.371094 2 43.125 2 Z M 37.34375 6.03125 C 37.117188 6.0625 36.90625 6.175781 36.75 6.34375 L 4.3125 38.8125 C 4.183594 38.929688 4.085938 39.082031 4.03125 39.25 L 2.03125 46.75 C 1.941406 47.09375 2.042969 47.457031 2.292969 47.707031 C 2.542969 47.957031 2.90625 48.058594 3.25 47.96875 L 10.75 45.96875 C 10.917969 45.914063 11.070313 45.816406 11.1875 45.6875 L 43.65625 13.25 C 44.054688 12.863281 44.058594 12.226563 43.671875 11.828125 C 43.285156 11.429688 42.648438 11.425781 42.25 11.8125 L 9.96875 44.09375 L 5.90625 40.03125 L 38.1875 7.75 C 38.488281 7.460938 38.578125 7.011719 38.410156 6.628906 C 38.242188 6.246094 37.855469 6.007813 37.4375 6.03125 C 37.40625 6.03125 37.375 6.03125 37.34375 6.03125 Z\" />\n        </svg>\n      </button>\n    </div>\n  );\n}\n\nexport default Item;\n","import React from 'react';\nimport Item from './Item';\nimport { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n  container: {\n    width: '60vw',\n    marginTop: '4.5rem',\n    marginBottom: '1rem',\n    padding: '1rem',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  '@media screen and (max-width: 32em)': {\n    container: {\n      width: '85vw',\n    },\n  },\n});\n\nfunction Items({ isLoading, categoryId, data }) {\n  const classes = useStyles();\n  return (\n    <>\n      {!isLoading ? (\n        <div className={classes.container}>\n          {data.map((e) => (\n            <Item categoryId={categoryId} item={e} key={e.title} />\n          ))}\n        </div>\n      ) : (\n        <div className=\"loader loader-sm\">Loading...</div>\n      )}\n    </>\n  );\n}\n\nexport default Items;\n","export const initialState = {\n  user: null,\n};\n\nexport const actionTypes = {\n  SET_USER: 'SET_USER',\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case actionTypes.SET_USER:\n      return {\n        ...state,\n        user: action.user,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React, { useEffect, useState } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { auth, provider } from '../firebase';\n\nimport { useStateValue } from '../context/StateProvider';\nimport { actionTypes } from '../context/reducer';\n\nconst useStyles = createUseStyles({\n  login: {\n    width: '60%',\n    height: '100%',\n    display: 'grid',\n    padding: '1rem',\n    placeContent: 'center',\n    '& div': {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      '& h1': {\n        textAlign: 'center',\n        paddingBottom: '2rem',\n        color: 'rgba(255,255,255,0.87)',\n      },\n      '& button': {\n        width: '300px',\n        backgroundColor: '#D67AB1',\n        color: '#f2f2f2',\n        fontWeight: 600,\n        border: 'none',\n        borderRadius: '5px',\n      },\n    },\n  },\n});\n\nfunction Login() {\n  const classes = useStyles();\n  // eslint-disable-next-line no-unused-vars\n  const [state, dispatch] = useStateValue();\n  const [loading, setLoading] = useState(true);\n  const signIn = () => {\n    auth\n      .signInWithPopup(provider)\n      .then((result) => {\n        dispatch({\n          type: actionTypes.SET_USER,\n          user: result.user,\n        });\n      })\n      .catch((error) => {\n        alert(error.message);\n      });\n  };\n\n  useEffect(() => {\n    const sub = auth.onAuthStateChanged((user) => {\n      setLoading(false);\n      dispatch({\n        type: actionTypes.SET_USER,\n        user: user,\n      });\n      sub();\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (loading) {\n    return (\n      <div className={classes.login}>\n        <div className=\"loader\">Loading...</div>\n      </div>\n    );\n  }\n  return (\n    <div className={classes.login}>\n      <div>\n        <h1>No registration required, sign in with your google account</h1>\n        <button\n          type=\"button\"\n          className=\"input button\"\n          name=\"signIn\"\n          onClick={signIn}\n        >\n          Sign In\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","import React from 'react';\n\nconst Logout = ({ logout }) => {\n  return (\n    <>\n      <button className=\"input logout\" onClick={logout}>\n        Sign out\n      </button>\n    </>\n  );\n};\n\nexport default Logout;\n","import React from 'react';\nimport { useStateValue } from '../context/StateProvider';\n\nfunction UserInfo() {\n  // eslint-disable-next-line no-unused-vars\n  const [{ user }, dispatch] = useStateValue();\n\n  return (\n    <img\n      className=\"user-profile\"\n      src={user ? user?.photoURL : ''}\n      alt=\"Loading...\"\n    />\n  );\n}\n\nexport default UserInfo;\n","import { useScrollPosition } from '@n8tb1t/use-scroll-position';\nimport React, { useEffect, useState } from 'react';\nimport AddItem from './components/AddItem';\nimport Categories from './components/Categories';\nimport Items from './components/Items';\nimport Login from './components/Login';\nimport Logout from './components/Logout';\nimport UserInfo from './components/UserInfo';\nimport { actionTypes } from './context/reducer';\nimport { useStateValue } from './context/StateProvider';\nimport db, { auth } from './firebase';\n\nfunction App() {\n  // eslint-disable-next-line no-unused-vars\n  const [{ user }, dispatch] = useStateValue();\n  const [headerStyle, setHeaderStyle] = useState({\n    backgroundColor: 'transparent',\n  });\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [categories, setCategories] = useState([]);\n  const [items, setItems] = useState([]);\n  const [catId, setCatId] = useState('');\n\n  const logout = () => {\n    auth.signOut();\n    dispatch({\n      type: actionTypes.SET_USER,\n      user: '',\n    });\n  };\n\n  const catChanged = (e) => {\n    const {\n      target: { value: id },\n    } = e;\n    if (id) {\n      setCatId(id);\n      db.collection('categories')\n        .doc(id)\n        .collection('items')\n        .where('userId', '==', user.uid)\n        .orderBy('timestamp', 'asc')\n        .onSnapshot((snapshot) =>\n          setItems(\n            snapshot.docs.map((doc) => {\n              const data = doc.data();\n              const id = doc.id;\n              return { ...data, id };\n            })\n          )\n        );\n    }\n    setIsLoading(false);\n  };\n\n  useScrollPosition(\n    ({ prevPos, currPos }) => {\n      if (currPos.y < -100) {\n        setHeaderStyle({\n          backgroundColor: 'rgba(255,255,255,0.87)',\n          boxShadow: '0px 4px 3px 0px rgba(0, 0, 0, 0.1)',\n        });\n        return;\n      }\n      if (currPos.y > -100) {\n        if (headerStyle.backgroundColor !== 'transparent') {\n          setHeaderStyle({ backgroundColor: 'transparent' });\n        }\n      }\n    },\n    [headerStyle]\n  );\n\n  useEffect(() => {\n    if (user)\n      db.collection('categories').onSnapshot(({ docs }) => {\n        setCategories(\n          docs.map((doc, i) => ({\n            id: doc.id,\n            name: doc.data().name,\n          }))\n        );\n      });\n  }, [user]);\n\n  return (\n    <React.Fragment>\n      {user ? (\n        <>\n          <div className=\"header\" style={{ ...headerStyle }}>\n            <Categories values={categories} change={catChanged} />\n            <UserInfo />\n            <Logout logout={logout} />\n          </div>\n          <Items categoryId={catId} isLoading={isLoading} data={items} />\n          <AddItem id={catId} />\n        </>\n      ) : (\n        <Login />\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { StateProvider } from './context/StateProvider';\nimport reducer, { initialState } from './context/reducer';\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n      <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}